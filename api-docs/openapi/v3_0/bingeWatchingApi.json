{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Halo",
    "version" : "2.20.14"
  },
  "servers" : [ {
    "url" : "http://localhost:36144",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "basicAuth" : [ ],
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/apis/api.bingewatching.lik.cc/v1alpha1/movies" : {
      "get" : {
        "description" : "分页查询",
        "operationId" : "List movies",
        "parameters" : [ {
          "description" : "Page number. Default is 0.",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Size number. Default is 0.",
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Label selector. e.g.: hidden!=true",
          "in" : "query",
          "name" : "labelSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Field selector. e.g.: metadata.name==halo",
          "in" : "query",
          "name" : "fieldSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "timeline filtered by keyword.",
          "in" : "query",
          "name" : "keyword",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovieList"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "api.bingewatching.lik.cc/v1alpha1/bingewatching" ]
      }
    },
    "/apis/api.bingewatching.lik.cc/v1alpha1/movies/-/{name}" : {
      "get" : {
        "description" : "根据名称获取电影",
        "operationId" : "Get movie by name",
        "parameters" : [ {
          "description" : "电影名称",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "api.bingewatching.lik.cc/v1alpha1/bingewatching" ]
      }
    },
    "/apis/api.bingewatching.lik.cc/v1alpha1/movies/attachment" : {
      "post" : {
        "description" : "转存附件",
        "operationId" : "Update attachment",
        "parameters" : [ {
          "description" : "图片URL",
          "in" : "query",
          "name" : "picUrl",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "api.bingewatching.lik.cc/v1alpha1/bingewatching" ]
      }
    },
    "/apis/api.bingewatching.lik.cc/v1alpha1/movies/insert" : {
      "post" : {
        "description" : "批量插入影视记录",
        "operationId" : "Insert movies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HandsomeMovie"
                }
              }
            }
          },
          "description" : "影视记录列表",
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : { },
            "description" : "default response"
          }
        },
        "tags" : [ "api.bingewatching.lik.cc/v1alpha1/bingewatching" ]
      }
    },
    "/apis/api.bingewatching.lik.cc/v1alpha1/movies/sync" : {
      "post" : {
        "description" : "手动同步电影集数",
        "operationId" : "Sync movies",
        "responses" : {
          "default" : {
            "content" : { },
            "description" : "default response"
          }
        },
        "tags" : [ "api.bingewatching.lik.cc/v1alpha1/bingewatching" ]
      }
    },
    "/apis/bingewatching.lik.cc/v1alpha1/handsomemovies" : {
      "get" : {
        "description" : "List HandsomeMovie",
        "operationId" : "listHandsomeMovie",
        "parameters" : [ {
          "description" : "Page number. Default is 0.",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Size number. Default is 0.",
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Label selector. e.g.: hidden!=true",
          "in" : "query",
          "name" : "labelSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Field selector. e.g.: metadata.name==halo",
          "in" : "query",
          "name" : "fieldSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovieList"
                }
              }
            },
            "description" : "Response handsomemovies"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      },
      "post" : {
        "description" : "Create HandsomeMovie",
        "operationId" : "createHandsomeMovie",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/HandsomeMovie"
              }
            }
          },
          "description" : "Fresh handsomemovie"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovie"
                }
              }
            },
            "description" : "Response handsomemovies created just now"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      }
    },
    "/apis/bingewatching.lik.cc/v1alpha1/handsomemovies/{name}" : {
      "delete" : {
        "description" : "Delete HandsomeMovie",
        "operationId" : "deleteHandsomeMovie",
        "parameters" : [ {
          "description" : "Name of handsomemovie",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response handsomemovie deleted just now"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      },
      "get" : {
        "description" : "Get HandsomeMovie",
        "operationId" : "getHandsomeMovie",
        "parameters" : [ {
          "description" : "Name of handsomemovie",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovie"
                }
              }
            },
            "description" : "Response single handsomemovie"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      },
      "patch" : {
        "description" : "Patch HandsomeMovie",
        "operationId" : "patchHandsomeMovie",
        "parameters" : [ {
          "description" : "Name of handsomemovie",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonPatch"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovie"
                }
              }
            },
            "description" : "Response handsomemovie patched just now"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      },
      "put" : {
        "description" : "Update HandsomeMovie",
        "operationId" : "updateHandsomeMovie",
        "parameters" : [ {
          "description" : "Name of handsomemovie",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/HandsomeMovie"
              }
            }
          },
          "description" : "Updated handsomemovie"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HandsomeMovie"
                }
              }
            },
            "description" : "Response handsomemovies updated just now"
          }
        },
        "tags" : [ "HandsomeMovieV1alpha1" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "Attachment" : {
        "required" : [ "apiVersion", "kind", "metadata", "spec" ],
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/AttachmentSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/AttachmentStatus"
          }
        }
      },
      "AttachmentSpec" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "Display name of attachment"
          },
          "groupName" : {
            "type" : "string",
            "description" : "Group name"
          },
          "mediaType" : {
            "type" : "string",
            "description" : "Media type of attachment"
          },
          "ownerName" : {
            "type" : "string",
            "description" : "Name of User who uploads the attachment"
          },
          "policyName" : {
            "type" : "string",
            "description" : "Policy name"
          },
          "size" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Size of attachment. Unit is Byte",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Tags of attachment",
            "items" : {
              "type" : "string",
              "description" : "Tag name"
            }
          }
        }
      },
      "AttachmentStatus" : {
        "type" : "object",
        "properties" : {
          "permalink" : {
            "type" : "string",
            "description" : "Permalink of attachment.\nIf it is in local storage, the public URL will be set.\nIf it is in s3 storage, the Object URL will be set.\n"
          },
          "thumbnails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "CopyOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "copy" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "HandsomeMovie" : {
        "required" : [ "apiVersion", "kind", "metadata", "spec" ],
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/HandsomeMovieSpec"
          }
        }
      },
      "HandsomeMovieList" : {
        "required" : [ "first", "hasNext", "hasPrevious", "items", "last", "page", "size", "total", "totalPages" ],
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the first page."
          },
          "hasNext" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "hasPrevious" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "items" : {
            "type" : "array",
            "description" : "A chunk of items.",
            "items" : {
              "$ref" : "#/components/schemas/HandsomeMovie"
            }
          },
          "last" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the last page."
          },
          "page" : {
            "type" : "integer",
            "description" : "Page number, starts from 1. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "description" : "Size of each page. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total elements.",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "Indicates total pages.",
            "format" : "int64"
          }
        }
      },
      "HandsomeMovieSpec" : {
        "required" : [ "vodName", "vodPic" ],
        "type" : "object",
        "properties" : {
          "classicLines" : {
            "type" : "array",
            "description" : "经典台词",
            "items" : {
              "type" : "string",
              "description" : "经典台词"
            }
          },
          "newSeen" : {
            "type" : "string",
            "description" : "更新集数"
          },
          "seen" : {
            "type" : "string",
            "description" : "已看集数"
          },
          "status" : {
            "type" : "string",
            "description" : "追剧状态"
          },
          "typeName" : {
            "type" : "string",
            "description" : "影视类型"
          },
          "updateCycle" : {
            "type" : "string",
            "description" : "更新周期/周"
          },
          "vodActor" : {
            "type" : "string",
            "description" : "影视演员"
          },
          "vodContent" : {
            "type" : "string",
            "description" : "影视描述"
          },
          "vodEn" : {
            "type" : "string",
            "description" : "英文名称"
          },
          "vodLang" : {
            "type" : "string",
            "description" : "地区语言"
          },
          "vodName" : {
            "type" : "string",
            "description" : "影视名称"
          },
          "vodPic" : {
            "type" : "string",
            "description" : "影视图片"
          },
          "vodScore" : {
            "type" : "string",
            "description" : "影视评分"
          },
          "vodYear" : {
            "type" : "string",
            "description" : "影视年份"
          }
        }
      },
      "JsonNode" : {
        "type" : "object"
      },
      "JsonPatch" : {
        "minItems" : 1,
        "uniqueItems" : true,
        "type" : "array",
        "description" : "JSON schema for JSONPatch operations",
        "items" : {
          "oneOf" : [ {
            "$ref" : "#/components/schemas/AddOperation"
          }, {
            "$ref" : "#/components/schemas/ReplaceOperation"
          }, {
            "$ref" : "#/components/schemas/TestOperation"
          }, {
            "$ref" : "#/components/schemas/RemoveOperation"
          }, {
            "$ref" : "#/components/schemas/MoveOperation"
          }, {
            "$ref" : "#/components/schemas/CopyOperation"
          } ]
        }
      },
      "Metadata" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "creationTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deletionTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "finalizers" : {
            "uniqueItems" : true,
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true
            }
          },
          "generateName" : {
            "type" : "string",
            "description" : "The name field will be generated automatically according to the given generateName field"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Metadata name"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "MoveOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "move" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "RemoveOperation" : {
        "required" : [ "op", "path" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "remove" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "ReplaceOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "replace" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "TestOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "test" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      }
    },
    "securitySchemes" : {
      "basicAuth" : {
        "scheme" : "basic",
        "type" : "http"
      },
      "bearerAuth" : {
        "bearerFormat" : "JWT",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}